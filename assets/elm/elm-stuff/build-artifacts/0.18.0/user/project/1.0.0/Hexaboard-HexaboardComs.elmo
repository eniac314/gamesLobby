var _user$project$Hexaboard_HexaboardComs$debugJson = function (getter) {
	return _elm_lang$core$Json_Decode$decodeValue(
		A2(
			_elm_lang$core$Json_Decode$map,
			_eeue56$elm_pretty_print_json$Json_PrettyPrint$toString,
			getter(_elm_lang$core$Json_Decode$value)));
};
var _user$project$Hexaboard_HexaboardComs$decodeScore = _elm_lang$core$Json_Decode$int;
var _user$project$Hexaboard_HexaboardComs$decodeScores = A2(
	_elm_lang$core$Json_Decode$map,
	_elm_lang$core$Dict$values,
	_elm_lang$core$Json_Decode$dict(
		A4(
			_elm_lang$core$Json_Decode$map3,
			F3(
				function (v0, v1, v2) {
					return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
				}),
			A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string),
			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
			A2(_elm_lang$core$Json_Decode$field, 'score', _elm_lang$core$Json_Decode$int))));
var _user$project$Hexaboard_HexaboardComs$decodeDeck = _elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$int);
var _user$project$Hexaboard_HexaboardComs$playerDecoder2 = function (player) {
	return A2(
		_elm_lang$core$Json_Decode$field,
		player,
		A4(
			_elm_lang$core$Json_Decode$map3,
			F3(
				function (v0, v1, v2) {
					return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
				}),
			A2(_elm_lang$core$Json_Decode$field, 'deck', _user$project$Hexaboard_HexaboardComs$decodeDeck),
			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
			A2(
				_elm_lang$core$Json_Decode$field,
				'piece',
				_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$int))));
};
var _user$project$Hexaboard_HexaboardComs$decodePlayers = function () {
	var decodePiece = function (id) {
		return A2(
			_elm_lang$core$Json_Decode$map,
			_elm_lang$core$Maybe$map(
				function (v) {
					return A2(_user$project$Hexaboard_HexaboardTypes$Piece, v, id);
				}),
			_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$int));
	};
	var decodePlayer = A5(
		_elm_lang$core$Json_Decode$map4,
		_user$project$Hexaboard_HexaboardTypes$Player,
		A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string),
		A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
		A2(_elm_lang$core$Json_Decode$field, 'score', _elm_lang$core$Json_Decode$int),
		A2(
			_elm_lang$core$Json_Decode$andThen,
			function (id) {
				return A2(
					_elm_lang$core$Json_Decode$field,
					'piece',
					decodePiece(id));
			},
			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int)));
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Dict$values,
		_elm_lang$core$Json_Decode$dict(decodePlayer));
}();
var _user$project$Hexaboard_HexaboardComs$decodePlayer = function (player) {
	return _elm_lang$core$Json_Decode$decodeValue(
		A2(
			_elm_lang$core$Json_Decode$field,
			'players',
			_user$project$Hexaboard_HexaboardComs$playerDecoder2(player)));
};
var _user$project$Hexaboard_HexaboardComs$decodePlayingOrder = _elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$int);
var _user$project$Hexaboard_HexaboardComs$decodeTurnSelOrd = _elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$int);
var _user$project$Hexaboard_HexaboardComs$decodeAvlTurns = _elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$int);
var _user$project$Hexaboard_HexaboardComs$decodeTurnsInfo = function (jsonVal) {
	var turnsInfo = F3(
		function (avt, tso, po) {
			return {availableTurns: avt, turnSelectionOrder: tso, playingOrder: po};
		});
	return A2(
		_elm_lang$core$Json_Decode$decodeValue,
		A4(
			_elm_lang$core$Json_Decode$map3,
			turnsInfo,
			A2(_elm_lang$core$Json_Decode$field, 'available_turns', _user$project$Hexaboard_HexaboardComs$decodeAvlTurns),
			A2(_elm_lang$core$Json_Decode$field, 'turn_selection_order', _user$project$Hexaboard_HexaboardComs$decodeTurnSelOrd),
			A2(_elm_lang$core$Json_Decode$field, 'playing_order', _user$project$Hexaboard_HexaboardComs$decodePlayingOrder)),
		jsonVal);
};
var _user$project$Hexaboard_HexaboardComs$decodePiece = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Hexaboard_HexaboardTypes$Piece,
	A2(_elm_lang$core$Json_Decode$field, 'value', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'player_id', _elm_lang$core$Json_Decode$int));
var _user$project$Hexaboard_HexaboardComs$decodeCellState = function () {
	var decodeUnplayable = A2(
		_elm_lang$core$Json_Decode$map,
		function (_p0) {
			return _user$project$Hexaboard_HexaboardTypes$UnPlayable(_user$project$Hexaboard_HexaboardTypes$Grey);
		},
		A2(_elm_lang$core$Json_Decode$field, 'unplayable', _elm_lang$core$Json_Decode$string));
	var decodeContainPiece = A2(
		_elm_lang$core$Json_Decode$map,
		_user$project$Hexaboard_HexaboardTypes$Contain,
		A2(_elm_lang$core$Json_Decode$field, 'contain', _user$project$Hexaboard_HexaboardComs$decodePiece));
	var decodeToSumType = F2(
		function (s, t) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (v) {
					return _elm_lang$core$Native_Utils.eq(v, s) ? _elm_lang$core$Json_Decode$succeed(t) : _elm_lang$core$Json_Decode$fail('wrong match');
				},
				_elm_lang$core$Json_Decode$string);
		});
	var decodeEmpty = A2(decodeToSumType, 'empty', _user$project$Hexaboard_HexaboardTypes$Empty);
	return _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: decodeEmpty,
			_1: {
				ctor: '::',
				_0: decodeContainPiece,
				_1: {
					ctor: '::',
					_0: decodeUnplayable,
					_1: {ctor: '[]'}
				}
			}
		});
}();
var _user$project$Hexaboard_HexaboardComs$decodeCell = A4(
	_elm_lang$core$Json_Decode$map3,
	_user$project$Hexaboard_HexaboardTypes$Cell,
	A2(_elm_lang$core$Json_Decode$field, 'x_pos', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'y_pos', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'state', _user$project$Hexaboard_HexaboardComs$decodeCellState));
var _user$project$Hexaboard_HexaboardComs$decodeBoard = A2(
	_elm_lang$core$Json_Decode$map,
	A2(
		_elm_lang$core$List$foldr,
		F2(
			function (c, acc) {
				return A3(
					_elm_lang$core$Dict$insert,
					{ctor: '_Tuple2', _0: c.xPos, _1: c.yPos},
					c,
					acc);
			}),
		_elm_lang$core$Dict$empty),
	_elm_lang$core$Json_Decode$list(_user$project$Hexaboard_HexaboardComs$decodeCell));
var _user$project$Hexaboard_HexaboardComs$decodeGameState = F2(
	function (player, jsonVal) {
		var gameState = F7(
			function (b, _p1, at, tso, po, go, ps) {
				var _p2 = _p1;
				var _p3 = _p2._1;
				return {
					board: b,
					deck: A2(
						_elm_lang$core$List$map,
						function (v) {
							return {value: v, playerId: _p3};
						},
						_p2._0),
					id: _p3,
					availableTurns: at,
					turnSelectionOrder: tso,
					piece: _p2._2,
					playingOrder: po,
					gameOver: go,
					players: ps
				};
			});
		var gameStateDecoder = A2(
			_elm_lang$core$Json_Decode$field,
			'game_state',
			A8(
				_elm_lang$core$Json_Decode$map7,
				gameState,
				A2(_elm_lang$core$Json_Decode$field, 'board', _user$project$Hexaboard_HexaboardComs$decodeBoard),
				A2(
					_elm_lang$core$Json_Decode$field,
					'players',
					_user$project$Hexaboard_HexaboardComs$playerDecoder2(player)),
				A2(_elm_lang$core$Json_Decode$field, 'available_turns', _user$project$Hexaboard_HexaboardComs$decodeAvlTurns),
				A2(_elm_lang$core$Json_Decode$field, 'turn_selection_order', _user$project$Hexaboard_HexaboardComs$decodeTurnSelOrd),
				A2(_elm_lang$core$Json_Decode$field, 'playing_order', _user$project$Hexaboard_HexaboardComs$decodePlayingOrder),
				A2(_elm_lang$core$Json_Decode$field, 'game_over', _elm_lang$core$Json_Decode$bool),
				A2(_elm_lang$core$Json_Decode$field, 'players', _user$project$Hexaboard_HexaboardComs$decodePlayers)));
		return A2(_elm_lang$core$Json_Decode$decodeValue, gameStateDecoder, jsonVal);
	});
var _user$project$Hexaboard_HexaboardComs$decodePieceDown = _user$project$Hexaboard_HexaboardComs$decodeGameState;
var _user$project$Hexaboard_HexaboardComs$decodeDate = A2(
	_elm_lang$core$Json_Decode$map,
	function (v) {
		return _elm_lang$core$Date$fromTime(v);
	},
	_elm_lang$core$Json_Decode$float);
var _user$project$Hexaboard_HexaboardComs$presPlayerDecoder = A3(
	_elm_lang$core$Json_Decode$map2,
	F2(
		function (j, u) {
			return _elm_lang$core$Native_Utils.update(
				_user$project$Hexaboard_HexaboardTypes$defPresPlayer,
				{onlineAt: j, username: u});
		}),
	A2(_elm_lang$core$Json_Decode$field, 'joined_at', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'username', _elm_lang$core$Json_Decode$string));
var _user$project$Hexaboard_HexaboardComs$chatMessageDecoder = A2(
	_elm_lang$core$Json_Decode$map,
	_user$project$Hexaboard_HexaboardTypes$ChatMsg,
	A4(
		_elm_lang$core$Json_Decode$map3,
		_user$project$Hexaboard_HexaboardTypes$ChatMessage,
		A2(_elm_lang$core$Json_Decode$field, 'time_stamp', _user$project$Hexaboard_HexaboardComs$decodeDate),
		A2(_elm_lang$core$Json_Decode$field, 'author', _user$project$Hexaboard_HexaboardComs$presPlayerDecoder),
		A2(_elm_lang$core$Json_Decode$field, 'message', _elm_lang$core$Json_Decode$string)));
var _user$project$Hexaboard_HexaboardComs$decodeChatMessage = function (jsonVal) {
	return A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Hexaboard_HexaboardComs$chatMessageDecoder, jsonVal);
};
var _user$project$Hexaboard_HexaboardComs$decodeChatHistory = function (jsonVal) {
	var chatHistoryDecoder = _elm_lang$core$Json_Decode$list(_user$project$Hexaboard_HexaboardComs$chatMessageDecoder);
	return A2(
		_elm_lang$core$Json_Decode$decodeValue,
		A2(_elm_lang$core$Json_Decode$field, 'chat_history', chatHistoryDecoder),
		jsonVal);
};
var _user$project$Hexaboard_HexaboardComs$decodePlayerInfo = function (jsonVal) {
	return A2(
		_elm_lang$core$Result$map,
		function (name) {
			return _elm_lang$core$Native_Utils.update(
				_user$project$Hexaboard_HexaboardTypes$defPresPlayer,
				{username: name});
		},
		A2(
			_elm_lang$core$Json_Decode$decodeValue,
			A2(_elm_lang$core$Json_Decode$field, 'username', _elm_lang$core$Json_Decode$string),
			jsonVal));
};
var _user$project$Hexaboard_HexaboardComs$encodePickedUpPiece = function (_p4) {
	var _p5 = _p4;
	var _p6 = _p5.playerId;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'piece',
				_1: _elm_lang$core$Json_Encode$object(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'value',
							_1: _elm_lang$core$Json_Encode$int(_p5.value)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'player_id',
								_1: _elm_lang$core$Json_Encode$int(_p6)
							},
							_1: {ctor: '[]'}
						}
					})
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'player_id',
					_1: _elm_lang$core$Json_Encode$int(_p6)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Hexaboard_HexaboardComs$encodePlayer = function (_p7) {
	var _p8 = _p7;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'username',
				_1: _elm_lang$core$Json_Encode$string(_p8.username)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'joined_at',
					_1: _elm_lang$core$Json_Encode$string(_p8.onlineAt)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Hexaboard_HexaboardComs$encodeChatMessage = function (_p9) {
	var _p10 = _p9;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'time_stamp',
				_1: _elm_lang$core$Json_Encode$float(
					_elm_lang$core$Date$toTime(_p10.timeStamp))
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'author',
					_1: _user$project$Hexaboard_HexaboardComs$encodePlayer(_p10.author)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'message',
						_1: _elm_lang$core$Json_Encode$string(_p10.message)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Hexaboard_HexaboardComs$decodePresenceDiff = function (jsonVal) {
	return A2(
		_elm_lang$core$Json_Decode$decodeValue,
		_fbonetti$elm_phoenix_socket$Phoenix_Presence$presenceDiffDecoder(_user$project$Hexaboard_HexaboardComs$presPlayerDecoder),
		jsonVal);
};
var _user$project$Hexaboard_HexaboardComs$decodePresenceState = function (jsonVal) {
	return A2(
		_elm_lang$core$Json_Decode$decodeValue,
		_fbonetti$elm_phoenix_socket$Phoenix_Presence$presenceStateDecoder(_user$project$Hexaboard_HexaboardComs$presPlayerDecoder),
		jsonVal);
};
